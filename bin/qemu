#!/bin/sh
usage()
{
    cat <<EOF
Usage:
  qemu <KERNEL> <INITRD>

Environment variables that impact qemu:

    ARCH - QEMU arch
	     *: Launch QEMU as qemu-system-\${ARCH}
       default: None, mandatory

    V - Show kernel boot messages
	   "1": Show boot messages
	     *: Silent kernel boot

    QEMU_APPEND - Commandline options to pass to the kernel
       default: None

    QEMU_DTB - Path to device tree to use
       default: No device tree

    QEMU_MNT - JFFS2 image to mount as /mnt
       default: None, mandatory

    QEMU_HOST - Directory to passthrough-mount (9p) as /host
       default: None, mandatory

    QEMU_NIC - Network adapter model
       default: None, mandatory

    QEMU_NET - Network mode
      "bridge": Bridge the quests interface to the host's virbr0
	 "tap": Guest interface is exported as exported to host as qtap
       default: "bridge"

EOF
}

# Return ${2} if set, else ${1}
default()
{
    [ -z ${2} ] && echo ${1} || echo ${2}
}

# debug        :: enable Finit debug mode, used to be --debug
# quiet        :: no kernel logs, except for warnings + errors
# rescue       :: enter rescue mode, bypasses all .conf files
# splash       :: display splash screen and progress bar
# single, or S :: enter single user mode, runlevel 1 or
append_args()
{
    if [ "${V}" != "1" ]; then
	echo -n "quiet splash "
    fi

    echo -n "${QEMU_APPEND} "
    echo -n "block2mtd.block2mtd=/dev/sda,,Config "
}

dtb_args()
{
    if [ -z ${QEMU_DTB} ]; then
	return
    fi

    echo -n "-dtb ${IMAGEDIR}/${QEMU_DTB}"
}

mnt_args()
{
    echo -n "-device virtio-scsi-pci,id=scsi0 "
    echo -n "-drive file=${QEMU_MNT},if=none,format=raw,discard=unmap,id=drive0 "
    echo -n "-device scsi-hd,bus=scsi0.0,drive=drive0 "
}

host_args()
{
    echo -n "-device virtio-9p-pci,fsdev=hostfs,mount_tag=hostfs "
    echo -n "-fsdev local,id=hostfs,path=${QEMU_HOST},security_model=none"
}

net_args()
{
    echo -n "-net nic,model=${QEMU_NIC} "

    case $(default bridge "${QEMU_NET}") in
	bridge) echo -n "-net bridge,br=virbr0" ;;
	tap)    echo -n "-net tap,ifname=qtap"  ;;
    esac
}

if [ ${#} != 2 ]; then
    usage
    exit 1
fi

# Disable pulseaudio warning
export QEMU_AUDIO_DRV=none

# Start Qemu
#	    -watchdog i6300esb
qemu-system-${ARCH} -nographic -m 256M -M ${QEMU_MACH} ${QEMU_EXTRA}	\
	    -kernel ${1} -initrd ${2} -append "$(append_args)"		\
	    -rtc base=utc,clock=rt \
	    $(dtb_args) $(mnt_args) $(host_args) $(net_args)

# Restore TTY from Qemu target
stty sane
