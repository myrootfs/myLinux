#!/bin/sh
# Create Raspberry Pi style partitions on an SD card
# NOTE: Must run as root, device must be unmounted!

DEV=$1
PARTED=`which parted`
VFAT=`which mkfs.vfat`
EXT4=`which mkfs.ext4`

if [ $# -ne 1 ]; then
   echo "Usage: $0 DEV"
   echo
   echo 'Where DEV can be /dev/mmcblk0, /dev/sdc, or similar.'
   echo
   echo 'WARNING: Check the kernel log output using `dmesg` after inserting your SD card.'
   echo '         Make sure you provide to the correct device argument or you may trash'
   echo '         your operating system or other device!'
   echo
   exit 1
fi

if [ "x$PARTED" = "x" -o "x$VFAT" = "x" -o "x$EXT4" = "x" ]; then
    echo "Cannot find all required tools to run this script."
    echo 'You need to have parted, mkfs.vfat, and mkfs.ext4 in your $PATH'
    exit 1
fi

mount | grep $DEV 2>&1 >/dev/null
if [ $? -eq 0 ]; then
    echo
    echo "WARNING: $DEV is mounted!"
    echo
    echo "         Are you sure you've given the correct device?"
    echo "         If so, please unmount it first."
    echo
    exit 1
fi

if [ ! -b $DEV ]; then
    echo "ERROR: $DEV is not a valid block device.  Did you forget to insert the SD card?"
    exit 1
fi

if [ ! -w $DEV ]; then
    echo "ERROR: $DEV is not writable.  Try running script as root: sudo $0 $*"
    exit 1
fi

read -p "Overwrite contents of $DEV, are you sure (y/N)? " yorn
if [ $yorn != "y" -a $yorn != "Y" ]; then
    echo "OK, exiting.  No changes to $DEV have been made."
    exit 0
fi

echo "Creating new partition table ..."
parted -s $DEV \
       mklabel msdos \
       mkpart primary fat32 1M 30M \
       mkpart primary ext4 30M 100%
if [ $? -ne 0 ]; then
    "ERROR: Failed excuting parted, it is requried to run this script."
    exit 1
fi

DEVP1=`ls $DEV*1`
DEVP2=`ls $DEV*2`
if [ "x$DEVP1" = "x" -o "x$DEVP2" = "x" ]; then
    echo "Failed creating partitions on $DEV"
    exit 1
fi

echo "Created the following two partitions:"
echo "   $DEVP1"
echo "   $DEVP2"
echo

echo "Creating file systems ... "
mkfs.vfat -n BOOT    $DEVP1
mkfs.ext4 -L ROOT -q $DEVP2

echo
echo "All done."
echo
