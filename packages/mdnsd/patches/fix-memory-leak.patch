commit e5b95fc273bc579d19149773e51564196dceb751
Author: Joachim Nilsson <troglobit@gmail.com>
Date:   Fri Apr 10 17:01:04 2020 +0200

    libmdnsd: Fix memory leak, only update TTL for existing entrys
    
    Based on an email patch by Peter Fleer <Peter.Fleer@devolo.de>.
    
    Signed-off-by: Joachim Nilsson <troglobit@gmail.com>

diff --git a/libmdnsd/mdnsd.c b/libmdnsd/mdnsd.c
index d5df76a..fc2fc60 100644
--- a/libmdnsd/mdnsd.c
+++ b/libmdnsd/mdnsd.c
@@ -481,6 +481,7 @@ static void _gc(mdns_daemon_t *d)
 
 static int _cache(mdns_daemon_t *d, struct resource *r)
 {
+	unsigned long int ttl;
 	struct cached *c = 0;
 	int i = _namehash(r->name) % LPRIME;
 
@@ -508,6 +509,16 @@ static int _cache(mdns_daemon_t *d, struct resource *r)
 	 * XXX: The c->rr.ttl is a hack for now, BAD SPEC, start
 	 *      retrying just after half-waypoint, then expire
 	 */
+	ttl = (unsigned long)d->now.tv_sec + (r->ttl / 2) + 8;
+
+	/* If entry already exists, only udpate TTL value */
+	c = _c_next(d, NULL, r->name, r->type);
+	if (c) {
+		c->rr.ttl = ttl;
+		return 0;
+	}
+
+	/* New entry, cache it */
 	c = calloc(1, sizeof(struct cached));
 	if (!c)
 		return 1;
@@ -518,7 +529,7 @@ static int _cache(mdns_daemon_t *d, struct resource *r)
 		return 1;
 	}
 	c->rr.type = r->type;
-	c->rr.ttl = (unsigned long)d->now.tv_sec + (r->ttl / 2) + 8;
+	c->rr.ttl = ttl;
 	c->rr.rdlen = r->rdlength;
 	if (r->rdlength && !r->rdata) {
		//ERR("rdlength is %d but rdata is NULL for domain name %s, type: %d, ttl: %ld", r->rdlength, r->name, r->type, r->ttl);
